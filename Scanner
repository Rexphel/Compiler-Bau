%%

%public
%jayscanner javascanner
%jayparser MiniJavaParser
%class Scanner

%eofval{
    return new EOF();
%eofval}

ws = [ \t\r\n\b\015]+

%%

"(" {System.out.print(yytext()); return new LBRACKET(yytext());}
")" {System.out.print(yytext()); return new RBRACKET(yytext());}
"{" {System.out.print(yytext()); return new LBRACE(yytext());}
"}" {System.out.print(yytext()); return new RBRACE(yytext());}
"," {System.out.print(yytext()); return new COMMA(yytext());}
";" {System.out.print(yytext()); return new SEMICOLON(yytext());}
"." {System.out.print(yytext()); return new DOT(yytext());}

"+" {System.out.print(yytext()); return new PLUS(yytext());}
"-" {System.out.print(yytext()); return new MINUS(yytext());}
"*" {System.out.print(yytext()); return new MULTIPLY(yytext());}
"/" {System.out.print(yytext()); return new DIVIDE(yytext());}

"=" {System.out.print(yytext()); return new JASSIGN(yytext());}
"!" {System.out.print(yytext()); return new NOT(yytext());}
"==" {System.out.print(yytext()); return new EQUALS(yytext());}
"!=" {System.out.print(yytext()); return new NOTEQUAL(yytext());}
">" {System.out.print(yytext()); return new GREATER(yytext());}
">=" {System.out.print(yytext()); return new GREATEROREQUAL(yytext());}
"<" {System.out.print(yytext()); return new LESS(yytext());}
"<=" {System.out.print(yytext()); return new LESSOREQUAL(yytext());}

"boolean" {System.out.print(yytext()); return new BOOLEAN(yytext());}
"int" {System.out.print(yytext()); return new INT(yytext());}
"char" {System.out.print(yytext()); return new CHAR(yytext());}
"String" {System.out.print(yytext()); return new STRING(yytext());}

"null" {System.out.print(yytext()); return new NULLLITERAL(yytext());}
true|false {System.out.print(yytext()); return new BOOLLITERAL(yytext());}
[1-9][0-9]*[I]? {System.out.print(yytext()); return new INTLITERAL(yytext());}
\".*\" {System.out.print(yytext()); return new STRINGLITERAL(yytext());}

"class" {System.out.print(yytext()); return new CLASS(yytext());}
"new" {System.out.print(yytext()); return new JNEW(yytext());}
"super" {System.out.print(yytext()); return new JSUPER(yytext());}
"this" {System.out.print(yytext()); return new JTHIS(yytext());}
"void" {System.out.print(yytext()); return new VOID(yytext());}
[a-zA-Z_][0-9a-zA-Z_]* {System.out.print(yytext()); return new IDENTIFIER(yytext());}

if {System.out.print(yytext()); return new IF(yytext());}
else {System.out.print(yytext()); return new ELSE(yytext());}
while {System.out.print(yytext()); return new WHILE(yytext());}
return {System.out.print(yytext()); return new RETURN(yytext());}

{ws} {System.out.print(yytext());}
.  { }
